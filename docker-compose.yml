volumes:
  sqlserver_data1:

networks:
  app_network: # Define a custom network
    driver: bridge
  
services:
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: MSSQL_Container
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=Adham@1234
      - MSSQL_PID=Developer
    user: root
    ports:
      - 1433:1433
    volumes:
      - sqlserver_data1:/var/opt/mssql
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P Adham@1234 -C -Q 'SELECT 1' || exit 1"]
      interval: 10s
      retries: 10
      start_period: 10s
      timeout: 3s
    networks:
      - app_network
  sqlserver.configurator:
    image: mcr.microsoft.com/mssql/server:2022-latest
    user: root
    volumes:
      - ./init:/docker-entrypoint-initdb.d
    depends_on:
      sqlserver:
        condition: service_healthy
    command: >
      bash -c '
      /opt/mssql-tools18/bin/sqlcmd -S sqlserver -U sa -P 1StrongPwd!! -C -d master -i docker-entrypoint-initdb.d/init.sql;
      echo "All done!";
      '
    networks:
      - app_network
  adminer:
    image: adminer
    container_name: Adminer_Container
    ports:
      - 5080:8080
    restart: always
    networks:
      - app_network
    